package com.abhi.exception.handlerController;

import java.util.List;
import java.util.function.Function;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.validation.ObjectError;
import org.springframework.web.bind.MethodArgumentNotValidException;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RestControllerAdvice;

@RestControllerAdvice
public class ExceptionHandlerController {

	@ExceptionHandler(MethodArgumentNotValidException.class )
	public ResponseEntity<List<String>> methodArgumentNotValitException(MethodArgumentNotValidException ex){
		BindingResult br=ex.getBindingResult();
		List<ObjectError> objectErrorList=br.getAllErrors();
		/*List<String> errorList=new ArrayList<>();
		for(ObjectError error: objectErrorList) {
			errorList.add(error.getDefaultMessage());
		}*/
		
		class AA implements Function<ObjectError,String>{

			@Override
			public String apply(ObjectError t) {
				System.out.println("Apply method Invoked");
				return t.getDefaultMessage();
			}
			
		}
		
		List<String> errorList=objectErrorList.stream().map(new AA()).toList();
		
		//List<String> errorList=objectErrorList.stream().map((error)->error.getDefaultMessage()).toList();
		
		return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(errorList);
		
	}
}
